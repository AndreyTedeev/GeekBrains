// <auto-generated />
using System;
using MailLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailLibrary.Migrations
{
    [DbContext(typeof(MailDb))]
    [Migration("20201219033925_Fix-Seeding-Schedule")]
    partial class FixSeedingSchedule
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MailLibrary.Model.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Emails", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = "Test... 1",
                            Subject = "Test Email #1"
                        },
                        new
                        {
                            Id = 2,
                            Message = "Test... 2",
                            Subject = "Test Email #2"
                        },
                        new
                        {
                            Id = 3,
                            Message = "Test... 3",
                            Subject = "Test Email #3"
                        });
                });

            modelBuilder.Entity("MailLibrary.Model.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Recipients", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "john@yandex.ru",
                            Name = "John Lennon"
                        },
                        new
                        {
                            Id = 2,
                            Address = "gaga@yandex.ru",
                            Name = "Lady Gaga"
                        },
                        new
                        {
                            Id = 3,
                            Address = "kperry@yandex.ru",
                            Name = "Katy Perry"
                        });
                });

            modelBuilder.Entity("MailLibrary.Model.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmailId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("ServerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.HasIndex("ServerId");

                    b.ToTable("Schedules", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailId = 1,
                            RecipientId = 1,
                            SenderId = 1,
                            ServerId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailId = 2,
                            RecipientId = 2,
                            SenderId = 2,
                            ServerId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2021, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailId = 3,
                            RecipientId = 3,
                            SenderId = 3,
                            ServerId = 3
                        });
                });

            modelBuilder.Entity("MailLibrary.Model.Sender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Senders", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "iviv@yandex.ru",
                            Name = "Ivan Ivanov"
                        },
                        new
                        {
                            Id = 2,
                            Address = "pepe@yandex.ru",
                            Name = "Petr Petrov"
                        },
                        new
                        {
                            Id = 3,
                            Address = "sidor@yandex.ru",
                            Name = "Sidor Sidorov"
                        });
                });

            modelBuilder.Entity("MailLibrary.Model.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Servers", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Host = "smtp.yandex.ru",
                            Password = "",
                            Port = 565,
                            User = "test"
                        },
                        new
                        {
                            Id = 2,
                            Host = "smtp.mail.ru",
                            Password = "",
                            Port = 25,
                            User = "test"
                        },
                        new
                        {
                            Id = 3,
                            Host = "smtp.gmail.com",
                            Password = "",
                            Port = 467,
                            User = "test"
                        });
                });

            modelBuilder.Entity("MailLibrary.Model.Schedule", b =>
                {
                    b.HasOne("MailLibrary.Model.Email", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MailLibrary.Model.Recipient", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MailLibrary.Model.Sender", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MailLibrary.Model.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");

                    b.Navigation("Recipient");

                    b.Navigation("Sender");

                    b.Navigation("Server");
                });
#pragma warning restore 612, 618
        }
    }
}
